import datetime

#48hrs of LJ data
response = [['2021-02-26T00:00:00+00:00', 53.0], ['2021-02-01T00:30:00+00:00', 53.0], ['2021-02-01T01:00:00+00:00', 53.5], ['2021-02-01T01:30:00+00:00', 53.5], ['2021-02-01T02:00:00+00:00', 51.5], ['2021-02-01T02:30:00+00:00', 51.5], ['2021-02-01T03:00:00+00:00', 49.0], ['2021-02-01T03:30:00+00:00', 49.0], ['2021-02-01T04:00:00+00:00', 48.8], ['2021-02-01T04:30:00+00:00', 48.8], ['2021-02-01T05:00:00+00:00', 52.8], ['2021-02-01T05:30:00+00:00', 52.8], ['2021-02-01T06:00:00+00:00', 59.0], ['2021-02-01T06:30:00+00:00', 59.0], ['2021-02-01T07:00:00+00:00', 61.0], ['2021-02-01T07:30:00+00:00', 61.0], ['2021-02-01T08:00:00+00:00', 69.0], ['2021-02-01T08:30:00+00:00', 69.0], ['2021-02-01T09:00:00+00:00', 76.0], ['2021-02-01T09:30:00+00:00', 76.0], ['2021-02-01T10:00:00+00:00', 80.85], ['2021-02-01T10:30:00+00:00', 80.85], ['2021-02-01T11:00:00+00:00', 81.0], ['2021-02-01T11:30:00+00:00', 81.0], ['2021-02-01T12:00:00+00:00', 89.0], ['2021-02-01T12:30:00+00:00', 89.0], ['2021-02-01T13:00:00+00:00', 87.0], ['2021-02-01T13:30:00+00:00', 87.0], ['2021-02-01T14:00:00+00:00', 78.0], ['2021-02-01T14:30:00+00:00', 78.0], ['2021-02-01T15:00:00+00:00', 73.0], ['2021-02-01T15:30:00+00:00', 73.0], ['2021-02-01T16:00:00+00:00', 102.5], ['2021-02-01T16:30:00+00:00', 102.5], ['2021-02-01T17:00:00+00:00', 172.2], ['2021-02-01T17:30:00+00:00', 172.2], ['2021-02-01T18:00:00+00:00', 128.0], ['2021-02-01T18:30:00+00:00', 128.0], ['2021-02-01T19:00:00+00:00', 80.0], ['2021-02-01T19:30:00+00:00', 80.0], ['2021-02-01T20:00:00+00:00', 63.0], ['2021-02-01T20:30:00+00:00', 63.0], ['2021-02-01T21:00:00+00:00', 58.0], ['2021-02-01T21:30:00+00:00', 58.0], ['2021-02-01T22:00:00+00:00', 54.0], ['2021-02-01T22:30:00+00:00', 54.0], ['2021-02-01T23:00:00+00:00', 61.0], ['2021-02-01T23:30:00+00:00', 61.0], ['2021-02-02T00:00:00+00:00', 60.0], ['2021-02-02T00:30:00+00:00', 60.0], ['2021-02-02T01:00:00+00:00', 57.0], ['2021-02-02T01:30:00+00:00', 57.0], ['2021-02-02T02:00:00+00:00', 49.6], ['2021-02-02T02:30:00+00:00', 49.6], ['2021-02-02T03:00:00+00:00', 40.0], ['2021-02-02T03:30:00+00:00', 40.0], ['2021-02-02T04:00:00+00:00', 36.0], ['2021-02-02T04:30:00+00:00', 36.0], ['2021-02-02T05:00:00+00:00', 44.0], ['2021-02-02T05:30:00+00:00', 44.0], ['2021-02-02T06:00:00+00:00', 52.4], ['2021-02-02T06:30:00+00:00', 52.4], ['2021-02-02T07:00:00+00:00', 55.25], ['2021-02-02T07:30:00+00:00', 55.25], ['2021-02-02T08:00:00+00:00', 58.4], ['2021-02-02T08:30:00+00:00', 58.4], ['2021-02-02T09:00:00+00:00', 59.0], ['2021-02-02T09:30:00+00:00', 59.0], ['2021-02-02T10:00:00+00:00', 57.8], ['2021-02-02T10:30:00+00:00', 57.8], ['2021-02-02T11:00:00+00:00', 58.0], ['2021-02-02T11:30:00+00:00', 58.0], ['2021-02-02T12:00:00+00:00', 62.0], ['2021-02-02T12:30:00+00:00', 62.0], ['2021-02-02T13:00:00+00:00', 59.0], ['2021-02-02T13:30:00+00:00', 59.0], ['2021-02-02T14:00:00+00:00', 54.5], ['2021-02-02T14:30:00+00:00', 54.5], ['2021-02-02T15:00:00+00:00', 54.2], ['2021-02-02T15:30:00+00:00', 54.2], ['2021-02-02T16:00:00+00:00', 66.6], ['2021-02-02T16:30:00+00:00', 66.6], ['2021-02-02T17:00:00+00:00', 84.0], ['2021-02-02T17:30:00+00:00', 84.0], ['2021-02-02T18:00:00+00:00', 74.95], ['2021-02-02T18:30:00+00:00', 74.95], ['2021-02-02T19:00:00+00:00', 59.0], ['2021-02-02T19:30:00+00:00', 59.0], ['2021-02-02T20:00:00+00:00', 52.0], ['2021-02-02T20:30:00+00:00', 52.0], ['2021-02-02T21:00:00+00:00', 52.0], ['2021-02-02T21:30:00+00:00', 52.0], ['2021-02-02T22:00:00+00:00', 52.0], ['2021-02-02T22:30:00+00:00', 52.0], ['2021-02-02T23:00:00+00:00', 51.0], ['2021-02-02T23:30:00+00:00', 51.0]]

APXPrice = []

for timeslot in response:
    # Parse the UTC string to a datetime object
    # Can't do Timezone with colon, so this is the easiest option
    # Yes, I can do *better*, but that's not the point
    timeslot[0] = datetime.datetime.strptime(timeslot[0][0:19], '%Y-%m-%dT%H:%M:%S')
    # If the time is in the future (because it gives you the whole of every day you ask about)
    #   put it on the list
    if timeslot[0] >= datetime.datetime.now():
        APXPrice.append(timeslot[1])

print(APXPrice)